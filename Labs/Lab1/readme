            Вариант 22. Реализовать функцию возведения в куб частного двух целых чисел.

Ответы на вопросы:
            15. Приведите синтаксис оператора выбора в общем виде. Проиллюстрируйте его фрагментом программы на языке C#. 

В общем виде:

switch (выражение) {
case константа1:
последовательность операторов 
break;

case константа2:
последовательность операторов
break;

case константа3:
последовательность операторов
break;

...

default:
последовательность операторов
}

На языке C#:

/*Предполагается, что функции Task1-3 прописаны где-то в коде. Таким образом, оператор выбора будет вызывать одну из этих функций
в зависимости от введённого значения. Если введён 0 - не будет выбрано ничего. При некорректном вводе будет выдано сообщение об ошибке.*/

switch (select)
{
    case 0: break;
    case 1: Task1(); break;
    case 2: Task2(); break;
    case 3: Task3(); break;
    default: Console.WriteLine("Ошибка. Введите номер задания или 0 для выхода."); break;
}



            17. В чем состоит назначение пространств имен в языке C#? 

Пространства имен (namespace) — это способ, благодаря которому .NET избегает конфликтов имен между классами. 
Они предназначены для того, чтобы исключить ситуации, когда вы определяете класс, представляющий заказчика, называете его Customer, 
а после этого кто-то другой делает то же самое (подобный сценарий достаточно распространен).
Пространство имен — это не более чем группа типов данных, но дающая тот эффект, что имена всех типов данных в пределах пространства имен 
автоматически снабжаются префиксом - названием пространства имен. Пространства имен можно вкладывать друг в друга. 
Например, большинство базовых классов .NET общего назначения находятся в пространстве имен System. 
Базовый класс Array относится к этому пространству, поэтому его полное имя — System.Array.
Платформа .NET требует, чтобы все имена были объявлены в пределах пространства имен; 
например, вы можете поместить свой класс MyClass в пространство имен MyCompany. Тогда полное имя этого класса будет выглядеть как MyCompany.MyClass.
Если пространство имен не указано явно, тип будет добавлен к безымянному глобальному пространству имен.     
            
            19. Какое пространство имен использует системная библиотека .NET Framework? 

            System

            21. В чем состоит назначение директивы using? 
    Директива using используется в следующих трех целях.
Для разрешения использования типов в пространстве имен, чтобы не нужно было квалифицировать использование типа в этом пространстве имен:
using System.Text;

Для разрешения доступа к статическим членам и вложенным типам без необходимости квалифицировать доступ с помощью имени типа.
using static System.Math;

Чтобы создать псевдоним для пространства имен или типа. Это называется директивой using static.
using Project = PC.MyCompany.Project;

            23. Приведите синтаксис директивы using в общем виде. Проиллюстрируйте его фрагментом программы на языке C#. 

В общем виде:

using пространство.имён;

С#:

namespace PC
{
    // Define an alias for the nested namespace.
    using Project = PC.MyCompany.Project;
    class A
    {
        void M()
        {
            // Use the alias
            var mc = new Project.MyClass();
        }
    }
    namespace MyCompany
    {
        namespace Project
        {
            public class MyClass { }
        }
    }
}
